@model List<OutilRentabilite.Models.AnalyseProduitViewModel>

@{
    ViewData["Title"] = "Analyse par produit financier";
}

<h2 class="mb-4">Analyse détaillée par produit financier</h2>
@if (ViewBag.MeilleursProduits != null)
{
    foreach (var meilleur in (List<OutilRentabilite.Models.AnalyseProduitViewModel>)ViewBag.MeilleursProduits)
    {
        <div class="alert alert-success mt-3">
            Le produit le plus rentable de la catégorie <strong>@meilleur.TypeProduit</strong> est
            <strong>@meilleur.Nom</strong> avec un bénéfice moyen de <strong>@meilleur.BeneficeMoyen.ToString("N0")</strong> Ar.
        </div>
    }
}



@if (!Model.Any())
{
    <div class="alert alert-warning">Aucune donnée d’analyse disponible.</div>
}
else
{
    <table class="table table-bordered table-striped mt-3">
        <thead class="table-dark">
            <tr>
                <th>Nom du produit</th>
                <th>Type</th>
                <th>Revenu Moyen</th>
                <th>Coût Moyen</th>
                <th>Bénéfice Moyen</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Model)
            {
                <tr>
                    <td>@p.Nom</td>
                    <td>@p.TypeProduit</td>
                    <td>@p.RevenuMoyen.ToString("N0") Ar</td>
                    <td>@p.CoutMoyen.ToString("N0") Ar</td>
                    <td>@p.BeneficeMoyen.ToString("N0") Ar</td>
                
                </tr>
            }
        </tbody>
    </table>

    <canvas id="chartAnalyse" width="1000" height="400"></canvas>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            const labels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(p => p.Nom)));
            const revenus = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(p => p.RevenuMoyen)));
            const benefices = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(p => p.BeneficeMoyen)));

            const ctx = document.getElementById('chartAnalyse').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Revenu Moyen',
                            data: revenus,
                            backgroundColor: 'rgba(54, 162, 235, 0.7)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        },
                        {
                            label: 'Bénéfice Moyen',
                            data: benefices,
                            backgroundColor: 'rgba(255, 99, 132, 0.7)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Revenu & Bénéfice Moyen par produit'
                        },
                        legend: {
                            position: 'top'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function (value) {
                                    return value.toLocaleString() + " Ar";
                                }
                            }
                        }
                    }
                }
            });
        </script>
    }
}
