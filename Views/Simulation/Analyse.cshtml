@model List<OutilRentabilite.Models.AnalyseProduitViewModel>
@{
    ViewData["Title"] = "Analyse par produit financier";
}

<div class="container py-4">
    <h2 class="mb-4"><i class="bi bi-graph-up-arrow me-2"></i> Analyse par produit financier</h2>

    @if (ViewBag.MeilleursProduits != null)
    {
        <div class="row g-3 mb-4">
            @foreach (var meilleur in (List<OutilRentabilite.Models.AnalyseProduitViewModel>)ViewBag.MeilleursProduits)
            {
                <div class="col-md-4">
                    <div class="card shadow border-success">
                        <div class="card-body">
                            <h5 class="card-title text-success"><i class="bi bi-trophy-fill me-1"></i> Meilleur @meilleur.TypeProduit</h5>
                            <p class="mb-1"><strong>@meilleur.Nom</strong></p>
                            <p class="text-muted mb-0">Bénéfice moyen : <strong>@meilleur.BeneficeMoyen.ToString("N0") Ar</strong></p>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-warning"><i class="bi bi-exclamation-triangle me-2"></i> Aucune donnée d’analyse disponible.</div>
    }
    else
    {
        <div class="card shadow mb-4">
            <div class="card-header bg-dark text-white">
                <i class="bi bi-table me-2"></i> Détails par produit
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="table-analyse" class="table table-striped table-hover align-middle">
                        <thead class="table-dark">
                            <tr>
                                <th>Nom du produit</th>
                                <th>Type</th>
                                <th>Revenu Moyen</th>
                                <th>Coût Moyen</th>
                                <th>Bénéfice Moyen</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var p in Model)
                            {
                                <tr>
                                    <td>@p.Nom</td>
                                    <td>@p.TypeProduit</td>
                                    <td>@p.RevenuMoyen.ToString("N0") Ar</td>
                                    <td>@p.CoutMoyen.ToString("N0") Ar</td>
                                    <td>@p.BeneficeMoyen.ToString("N0") Ar</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="card shadow">
            <div class="card-header bg-primary text-white">
                <i class="bi bi-bar-chart-fill me-2"></i> Revenu & Bénéfice Moyen par produit
            </div>
            <div class="card-body">
                <canvas id="chartAnalyse" height="120"></canvas>
            </div>
        </div>
    }
</div>

@section Scripts {
    <!-- DataTables -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        $(document).ready(function () {
            $('#table-analyse').DataTable({
                language: { url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/fr-FR.json' }
            });
        });

        const labels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(p => p.Nom)));
        const revenus = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(p => p.RevenuMoyen)));
        const benefices = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(p => p.BeneficeMoyen)));

        const ctx = document.getElementById('chartAnalyse').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Revenu Moyen',
                        data: revenus,
                        backgroundColor: 'rgba(54, 162, 235, 0.7)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Bénéfice Moyen',
                        data: benefices,
                        backgroundColor: 'rgba(255, 99, 132, 0.7)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                return context.dataset.label + ': ' + context.raw.toLocaleString() + " Ar";
                            }
                        }
                    },
                    legend: { position: 'top' },
                    title: { display: true, text: 'Revenu & Bénéfice Moyen par produit' }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function (value) {
                                return value.toLocaleString() + " Ar";
                            }
                        }
                    }
                }
            }
        });
    </script>
}
