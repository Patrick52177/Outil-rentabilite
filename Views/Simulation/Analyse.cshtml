@{
    ViewBag.Title = "Analyse des Produits";
    var analyses = ViewBag.AnalyseParProduit;
    var produitsAvecData = ((IEnumerable<dynamic>)analyses).Where(p => p.HasResultats).ToList();
}

<h2 class="mb-4">Analyse des Produits Financiers</h2>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Nom</th>
            <th>Type</th>
            <th>Nombre de Simulations</th>
            <th>Détails</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var produit in analyses)
        {
            <tr>
                <td>@produit.Nom</td>
                <td>@produit.Type</td>
                <td>@produit.NbSimulation</td>
                <td>
                    @if (!produit.HasResultats)
                    {
                        <span class="text-muted">Aucune simulation</span>
                    }
                    else
                    {
                        <div>
                            Revenu : <strong>@produit.MoyenneRevenu</strong><br />
                            Coût : <strong>@produit.MoyenneCout</strong><br />
                            Bénéfice : <strong>@produit.MoyenneBenefice</strong><br />
                            Marge Brute : <strong>@produit.MoyenneMargeBrute %</strong><br />
                            ROI : <strong>@produit.MoyenneROI %</strong>
                        </div>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (produitsAvecData.Count > 0)
{
    <h3 class="mt-5">Graphique des Revenus & Bénéfices</h3>
    <canvas id="revenuChart" height="100"></canvas>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const labels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(produitsAvecData.Select(p => p.Nom)));
        const revenus = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(produitsAvecData.Select(p => p.MoyenneRevenu)));
        const benefices = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(produitsAvecData.Select(p => p.MoyenneBenefice)));

        const ctx = document.getElementById('revenuChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Revenu Moyen',
                        backgroundColor: 'rgba(255, 99, 132, 0.7)',
                        data: revenus
                    },
                    {
                        label: 'Bénéfice Moyen',
                        backgroundColor: 'rgba(54, 162, 235, 0.7)',
                        data: benefices
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    title: {
                        display: true,
                        text: 'Analyse Graphique'
                    }
                }
            }
        });
    </script>
}
else
{
    <p class="text-muted">Aucune donnée disponible pour le graphique.</p>
}





















